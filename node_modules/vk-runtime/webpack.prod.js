'use strict'
//vf2e.config.js该配置文件需要在配置中心配置，配置信息已精简，只有线上环境需要
const config = require('./vf2e.config.js')
const fs = require('fs')
const webpack = require('webpack')
const CopyWebpackPlugin = require('copy-webpack-plugin');
const cdn_config = config.cdn
const ExtractTextPlugin = require('extract-text-webpack-plugin')
const path = require('path')
const UglifyJSPlugin = require('uglifyjs-webpack-plugin')

if(config.moduleList){
  let data = new Buffer.from(`
    const dev = {dgl:{name: 'dgl', src: '/app.js'},reward:{name: 'reward',src: '/app.js'},newmajor:{name: 'newmajor',src: '/app.js'},exercise:{name: 'exercise',src: '/app.js'},newcourse:{name: 'newcourse',src: '/app.js'},newextension:{name: 'newextension',src: '/app.js'}, assignment:{name: 'assignment',src: '/app.js'}, affiliate:{name: 'affiliate',src: '/app.js'}}
    const prod = ${JSON.stringify(config.moduleList)}
    const moduleList = {dev,prod}
    export default moduleList`)


  fs.createWriteStream(path.resolve(__dirname , './src/runtime/moduleList.js'))
    .write(data,'utf8', function(err, buffer){
      console.log('over')
    })
}



module.exports = {
  output: {
    path: path.join(__dirname, "./output"),
    //filename: '[name]-[chunkhash].js',
    filename: '[name].js',
    chunkFilename: '[name]-[chunkhash].bundle.js',
    publicPath: cdn_config.publicPath
  },
  plugins: [
    // new CopyWebpackPlugin(
    //   [{
    //     from: 'star_lottery',
    //     to: './star_lottery/'
    //   }], {
    //     force: true,
    //     ignore: [],
    //     copyUnmodified: true,
    //   }),
    new ExtractTextPlugin({
      filename: 'src/css/style-[contenthash].css'
    }),
    new UglifyJSPlugin({
      uglifyOptions: {
        compress: {
          //drop_console: true
        }}
    }),
    new CopyWebpackPlugin(
      [{
        from: 'robots.txt',
        to: './'
      }], {
        ignore: [],
        copyUnmodified: true,
      }),
  ]
}
