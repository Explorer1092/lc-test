import axios from 'axios'
import formurlencoded from 'form-urlencoded'
import { getDeviceType } from './_toolsFunction.js'

// 获取mini + storyline 作业
function getHomework(studentId, lessonId, type, curriculumVersion) {
  if(!curriculumVersion || curriculumVersion == 'null' || curriculumVersion == 'undefined' || curriculumVersion == '') {
    curriculumVersion = '1'
  }
  return axios.get('/rest/learninggw/api/pc/material/breakpoint/getHomeworkResource', {
    params: {
      studentId: studentId,
      lessonId: lessonId,
      type: type,
      deviceType: getDeviceType(),
      curriculumVersion: curriculumVersion,
      _t: (new Date()).getTime()
    }
  })
}

// activity
function getActivityHomework(studentId, readerCode, bookId) {
  return axios.get('/rest/learninggw/api/pc/material/breakpoint/getActivityHomework', {
    params: {
      studentId: studentId,
      readerCode: readerCode,
      deviceType: getDeviceType(),
      bookId: bookId,
      _t: (new Date()).getTime()
    }
  })
}

// storyline保存汇总结果
function storylineSaveResult(studentId, studentHomeworkId, result, startDatetime, endDatetime) {
  return axios.post('/rest/learninggw/api/pc/service/homework/saveResult', formurlencoded({
    createId: studentId,
    studentHomeworkId: studentHomeworkId,
    result: result,
    startDatetime: startDatetime,
    endDatetime: endDatetime,
    deviceType: getDeviceType(),
    homeworkType: 0
  }))
}

// 初始化接口（mini+activity）和重新答题 都走统一一个接口 只是加一个homeworkType字段
function homeworkReplayAndInit(homeworkType, homeworkId, sectionIds) {
  return axios.get('/rest/learninggw/api/pc/material/breakpoint/initHomeworkResult', {
    params: {
      homeworkType: homeworkType,
      homeworkId: homeworkId,
      sectionIds: sectionIds,
      deviceType: getDeviceType(),
      _t: (new Date()).getTime()
    }
  })
}

// 初始化 sectionIds
function homeworkReplayAndSectionIdsInit(sectionId, homeworkResultId) {
  return axios.post('/rest/learninggw/api/pc/material/breakpoint/initHomeworkSectionResult', formurlencoded({
    sectionId: sectionId,
    homeworkResultId: homeworkResultId,
    deviceType: getDeviceType(),
    _t: (new Date()).getTime()
  }))
}

//保存单题结果，mini和activity 都统一一个接口 只是加一个homeworkType字段加以区分
function saveResultItem(homeworkType, homeworkResultId, stageId, select, right, start, end, routeName, isBreakPoint, isLastItem) {
  return axios.post('/rest/learninggw/api/pc/material/breakpoint/saveSingleQuestionResult', formurlencoded({
    homeworkType: homeworkType,
    homeworkResultId: homeworkResultId,
    stageId: stageId,
    select: select,
    right: right,
    start: start,
    end: end,
    routeName: routeName,
    deviceType: getDeviceType(),
    isBreakPoint: isBreakPoint,
    isLastItem: isLastItem
  }))
}

// 获取常见问题
function getHomeworkissueTag() {
  return axios.get('/rest/learninggw/api/pc/service/homeworkissue/tag')
}

// 保存问题
function homeworkissueSave(paramsString) {
  return axios.post('/rest/learninggw/api/pc/service/homeworkissue/save', formurlencoded({ feedback: paramsString }))
}

export {
  getHomework,
  getActivityHomework,
  storylineSaveResult,
  homeworkReplayAndInit,
  homeworkReplayAndSectionIdsInit,
  saveResultItem,
  getHomeworkissueTag,
  homeworkissueSave
}
