/**
 * Created by lihongbin on 2017/7/25.
 * loading插件
 */
import loadingVue from '../vk_loading.vue'
import utils from '../../../utils/_untils'
import Velocity from 'velocity-animate'

export default {
  install (Vue, options) {
    let toastTpl = Vue.extend(loadingVue)
    let temp = []
    Vue.directive('vkLoading', {
      bind: (el, binding, vnode, oldVnode) => {
        var vm = new toastTpl({
          propsData: {
            type: 'div'
          }
        })
        var loads = {
          el: el,
          loadDiv: vm.$mount().$el
        }
        temp.push(loads)
        el.appendChild(loads.loadDiv)
      },
      unbind: (el, binding, vnode, oldVnode) => {
        let v = utils.arrayFind(temp, item => item.el === el)
        el.removeChild(v.loadDiv)
      },
      update: (el, binding, vnode, oldVnode) => {
        let v = utils.arrayFind(temp, item => item.el === el)
        if (binding.value) {
          v.loadDiv.style.display = "block"
        } else {
          v.loadDiv.style.display = "none"
        }
      }
    })
    Vue.prototype.$LoadingShow = () => {
      var load = document.getElementById("learningLoading")
      load.style.display = "block"
    }
    Vue.prototype.$LoadingClose = () => {
      var load = document.getElementById("learningLoading")
      Velocity(load, {
        opacity: 0
      }, {
        duration: 1000,
        complete: function () {
          load.style.display = "none"
          load.style.opacity = 1
        }
      })
    }
  }
}
