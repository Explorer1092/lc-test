"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Widgets {
    query(dom) {
        var element = document.querySelector(dom);
        if (!element) {
            throw new Error('cannot find element ' + element);
        }
        return element;
    }
    // 生成一个随机的字符串
    uuid() {
        let s = [];
        let hexDigits = '0123456789abcdef';
        for (let i = 0; i < 36; i++) {
            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
        }
        s[14] = '4'; // bits 12-15 of the time_hi_and_version field to 0010
        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01
        s[8] = s[13] = s[18] = s[23] = '-';
        let uuid = s.join('');
        return uuid;
    }
    // 时间转化方法
    formatTime(time) {
        let seconds = Math.round(time), minutes = Math.floor(time / 60);
        (minutes = minutes >= 10 ? minutes : '0' + minutes),
            (seconds = Math.floor(time % 60)),
            (seconds = seconds >= 10 ? seconds : '0' + seconds);
        return minutes + ':' + seconds;
    }
    // 合并对象方法
    merge(obj1, obj2) {
        let obj = Object.assign(obj1, obj2);
        return obj;
    }
    // 获取元素位置
    getPosition(node) {
        let left = node.offsetLeft; //获取元素相对于其父元素的left值let var left
        let top = node.offsetTop;
        let current = node.offsetParent; // 取得元素的offsetParent // 一直循环直到根元素
        while (current != null) {
            left += current.offsetLeft;
            top += current.offsetTop;
            current = current.offsetParent;
        }
        return {
            left: left,
            top: top
        };
    }
}
exports.Widgets = Widgets;
//# sourceMappingURL=Widgets.js.map