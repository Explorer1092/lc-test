/**
 *  @file: vos.sdk.js is a <js> file
 *  @date: File created 2017-09-29 17:11
 *  @author:  shangwenhe
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _aliyun = require('./vendorsdk/aliyun/aliyun.entry');

var _aliyun2 = _interopRequireDefault(_aliyun);

var _qiniu = require('./vendorsdk/qiniu/qiniu.entry');

var _qiniu2 = _interopRequireDefault(_qiniu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @class vos
 *    @params info
 * @function put
 *    @params files
 */

var vos = function () {
  function vos(info) {
    _classCallCheck(this, vos);

    switch (info.cloud) {
      case 'oss':
        var token = JSON.parse(info.token);
        // openclud opcld 开放云
        this.opcld = new _aliyun2.default({
          region: info.region,
          //云账号AccessKey有所有API访问权限，建议遵循阿里云安全最佳实践，创建并使用STS方式来进行API访问
          accessKeyId: token.accessKeyId,
          accessKeySecret: token.accessKeySecret,
          stsToken: token.securityToken,
          endpoint: info.endpoint,
          bucket: info.bucket
        });
        break;
      case 'kodo':
        // 七牛云
        this.opcld = new _qiniu2.default({
          bucket: info.bucket,
          // key: info.key,
          token: info.token
        });
        break;
      default:
        throw new Error('无法识别第三方云');
    }
  }

  /**
   * @desc 上传文件
   * @params files 所要上传的文件
   */


  _createClass(vos, [{
    key: 'put',
    value: function put(files, callback, process) {
      this.opcld.put(files, callback, process);
    }

    /**
     * @desc 上传完成后通知服务端分发文件
     */

  }, {
    key: 'notifier',
    value: function notifier(info, callback) {
      callback(info);
    }
  }]);

  return vos;
}();

exports.default = vos;